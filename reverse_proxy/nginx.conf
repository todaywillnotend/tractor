user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 1024;
}

http {
		server {
			listen 80;
			server_name xn--80ascqaidaiedd.xn--p1ai www.xn--80ascqaidaiedd.xn--p1ai;
			return 301 https://$host$request_uri;
    	}

		server {
            listen 443 ssl;
            server_name xn--80ascqaidaiedd.xn--p1ai www.xn--80ascqaidaiedd.xn--p1ai;

            ssl_certificate /etc/nginx/ssl/bundle.crt;
            ssl_certificate_key /etc/nginx/ssl/private.key;

            error_page 404 /custom_404;
            
            location / {
                proxy_pass http://frontend:3000;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location /backend/ {
                rewrite ^/backend/?(.*)$ /$1 break;
                proxy_pass http://backend:1337;
                proxy_http_version 1.1;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Host $http_host;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_pass_request_headers on;
            }

            location = /custom_404 {
                proxy_pass http://frontend:3000/404;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
}